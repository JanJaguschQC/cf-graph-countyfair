{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "ensmallen",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "ensmallen provides a simple set of abstractions for writing an objective\nfunction to optimize. It     also provides a large set of standard and\ncutting-edge optimizers that can be used for virtually any mathematical\noptimization task. These include full-batch gradient descent techniques,\nsmall-batch techniques, gradient-free optimizers, and constrained optimization.\n",
   "dev_url": "https://github.com/mlpack/ensmallen",
   "doc_url": "http://ensmallen.org/docs.html",
   "home": "http://ensmallen.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "COPYRIGHT.txt",
   "summary": "ensmallen is a C++ header-only library for mathematical optimization."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "marcelotrevisani",
    "zoq",
    "rcurtin",
    "coatless"
   ]
  },
  "package": {
   "name": "ensmallen",
   "version": "2.18.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake"
   ],
   "host": [
    "armadillo >=9.800.0",
    "libblas",
    "openmp"
   ],
   "run": [
    "armadillo",
    "openmp"
   ]
  },
  "source": {
   "sha256": "4ac91619f7652ae34043af52d4eac3c957af0653ace55ad3b936e5c9bac948b6",
   "url": "https://github.com/mlpack/ensmallen/archive/2.18.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/include/ensmallen.hpp",
    "test -d $PREFIX/include/ensmallen_bits"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "armadillo",
    "libblas",
    "openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "armadillo",
    "openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "meta_yaml": {
  "about": {
   "description": "ensmallen provides a simple set of abstractions for writing an objective\nfunction to optimize. It     also provides a large set of standard and\ncutting-edge optimizers that can be used for virtually any mathematical\noptimization task. These include full-batch gradient descent techniques,\nsmall-batch techniques, gradient-free optimizers, and constrained optimization.\n",
   "dev_url": "https://github.com/mlpack/ensmallen",
   "doc_url": "http://ensmallen.org/docs.html",
   "home": "http://ensmallen.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "COPYRIGHT.txt",
   "summary": "ensmallen is a C++ header-only library for mathematical optimization."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "marcelotrevisani",
    "zoq",
    "rcurtin",
    "coatless",
    "marcelotrevisani",
    "zoq",
    "rcurtin",
    "coatless",
    "marcelotrevisani",
    "zoq",
    "rcurtin",
    "coatless"
   ]
  },
  "package": {
   "name": "ensmallen",
   "version": "2.18.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "armadillo >=9.800.0",
    "libblas",
    "openmp",
    "armadillo >=9.800.0",
    "libblas",
    "openmp",
    "armadillo >=9.800.0",
    "libblas",
    "openmp"
   ],
   "run": [
    "armadillo",
    "openmp",
    "armadillo",
    "openmp",
    "armadillo",
    "openmp"
   ]
  },
  "source": {
   "sha256": "4ac91619f7652ae34043af52d4eac3c957af0653ace55ad3b936e5c9bac948b6",
   "url": "https://github.com/mlpack/ensmallen/archive/2.18.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/include/ensmallen.hpp",
    "test -d $PREFIX/include/ensmallen_bits",
    "test -f $PREFIX/include/ensmallen.hpp",
    "test -d $PREFIX/include/ensmallen_bits",
    "if not exist %LIBRARY_INC%\\\\ensmallen.hpp exit 1",
    "if not exist %LIBRARY_INC%\\\\ensmallen_bits exit 1"
   ]
  }
 },
 "name": "ensmallen",
 "osx_64_meta_yaml": {
  "about": {
   "description": "ensmallen provides a simple set of abstractions for writing an objective\nfunction to optimize. It     also provides a large set of standard and\ncutting-edge optimizers that can be used for virtually any mathematical\noptimization task. These include full-batch gradient descent techniques,\nsmall-batch techniques, gradient-free optimizers, and constrained optimization.\n",
   "dev_url": "https://github.com/mlpack/ensmallen",
   "doc_url": "http://ensmallen.org/docs.html",
   "home": "http://ensmallen.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "COPYRIGHT.txt",
   "summary": "ensmallen is a C++ header-only library for mathematical optimization."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "marcelotrevisani",
    "zoq",
    "rcurtin",
    "coatless"
   ]
  },
  "package": {
   "name": "ensmallen",
   "version": "2.18.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake"
   ],
   "host": [
    "armadillo >=9.800.0",
    "libblas",
    "openmp"
   ],
   "run": [
    "armadillo",
    "openmp"
   ]
  },
  "source": {
   "sha256": "4ac91619f7652ae34043af52d4eac3c957af0653ace55ad3b936e5c9bac948b6",
   "url": "https://github.com/mlpack/ensmallen/archive/2.18.0.tar.gz"
  },
  "test": {
   "commands": [
    "test -f $PREFIX/include/ensmallen.hpp",
    "test -d $PREFIX/include/ensmallen_bits"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "armadillo",
    "libblas",
    "openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "armadillo",
    "openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "ensmallen"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "win_64",
  "osx_64",
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/ensmallen.json"
 },
 "raw_meta_yaml": "{% set name = \"ensmallen\" %}\n{% set version = \"2.18.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://github.com/mlpack/ensmallen/archive/{{ version }}.tar.gz\n  sha256: 4ac91619f7652ae34043af52d4eac3c957af0653ace55ad3b936e5c9bac948b6\n\nbuild:\n  number: 1\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - ninja  # [win]\n  host:\n    - armadillo >=9.800.0\n    - libblas\n    - openmp\n  run:\n    - armadillo\n    - openmp\n\ntest:\n  commands:\n    - test -f $PREFIX/include/ensmallen.hpp                    # [unix]\n    - test -d $PREFIX/include/ensmallen_bits                   # [unix]\n    - if not exist %LIBRARY_INC%\\\\ensmallen.hpp exit 1         # [win]\n    - if not exist %LIBRARY_INC%\\\\ensmallen_bits exit 1        # [win]\nabout:\n  home: http://ensmallen.org/\n  license: BSD-3-Clause\n  license_family: BSD\n  license_file: COPYRIGHT.txt\n  summary: ensmallen is a C++ header-only library for mathematical optimization.\n  description: |\n    ensmallen provides a simple set of abstractions for writing an objective \n    function to optimize. It     also provides a large set of standard and \n    cutting-edge optimizers that can be used for virtually any mathematical \n    optimization task. These include full-batch gradient descent techniques, \n    small-batch techniques, gradient-free optimizers, and constrained optimization.\n  doc_url: http://ensmallen.org/docs.html\n  dev_url: https://github.com/mlpack/ensmallen\n\nextra:\n  recipe-maintainers:\n    - marcelotrevisani\n    - zoq\n    - rcurtin\n    - coatless\n",
 "req": {
  "__set__": true,
  "elements": [
   "armadillo",
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "libblas",
   "ninja",
   "openmp"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "armadillo",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "libblas",
    "openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "armadillo",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "strong_exports": false,
 "time": 1568135303.448813,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "armadillo >=9.800.0",
    "libblas",
    "openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "armadillo",
    "openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 },
 "url": "https://github.com/mlpack/ensmallen/archive/2.18.0.tar.gz",
 "version": "2.18.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/ensmallen.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "ensmallen provides a simple set of abstractions for writing an objective\nfunction to optimize. It     also provides a large set of standard and\ncutting-edge optimizers that can be used for virtually any mathematical\noptimization task. These include full-batch gradient descent techniques,\nsmall-batch techniques, gradient-free optimizers, and constrained optimization.\n",
   "dev_url": "https://github.com/mlpack/ensmallen",
   "doc_url": "http://ensmallen.org/docs.html",
   "home": "http://ensmallen.org/",
   "license": "BSD-3-Clause",
   "license_family": "BSD",
   "license_file": "COPYRIGHT.txt",
   "summary": "ensmallen is a C++ header-only library for mathematical optimization."
  },
  "build": {
   "number": "1"
  },
  "extra": {
   "recipe-maintainers": [
    "marcelotrevisani",
    "zoq",
    "rcurtin",
    "coatless"
   ]
  },
  "package": {
   "name": "ensmallen",
   "version": "2.18.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "armadillo >=9.800.0",
    "libblas",
    "openmp"
   ],
   "run": [
    "armadillo",
    "openmp"
   ]
  },
  "source": {
   "sha256": "4ac91619f7652ae34043af52d4eac3c957af0653ace55ad3b936e5c9bac948b6",
   "url": "https://github.com/mlpack/ensmallen/archive/2.18.0.tar.gz"
  },
  "test": {
   "commands": [
    "if not exist %LIBRARY_INC%\\\\ensmallen.hpp exit 1",
    "if not exist %LIBRARY_INC%\\\\ensmallen_bits exit 1"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "armadillo",
    "libblas",
    "openmp"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "armadillo",
    "openmp"
   ]
  },
  "test": {
   "__set__": true,
   "elements": []
  }
 }
}