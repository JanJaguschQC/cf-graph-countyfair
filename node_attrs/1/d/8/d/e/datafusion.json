{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "provider": {
   "win": "azure"
  }
 },
 "feedstock_name": "datafusion",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "DataFusion is an extensible query execution framework, written in Rust,\nthat uses Apache Arrow as its in-memory format.\n",
   "dev_url": "https://github.com/apache/arrow-datafusion",
   "doc_url": "https://arrow.apache.org/datafusion",
   "home": "https://arrow.apache.org/datafusion",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": [
    "LICENSE.txt",
    "THIRDPARTY.yml",
    "LICENSE.txt",
    "THIRDPARTY.yml",
    "LICENSE.txt",
    "THIRDPARTY.yml",
    "LICENSE.txt",
    "THIRDPARTY.yml"
   ],
   "summary": "Extensible query execution framework"
  },
  "build": {
   "number": "0",
   "script": [
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "cpcloud",
    "andygrove",
    "cpcloud",
    "andygrove",
    "cpcloud",
    "andygrove",
    "cpcloud",
    "andygrove"
   ]
  },
  "package": {
   "name": "datafusion",
   "version": "0.7.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses"
   ],
   "host": [
    "python",
    "pip",
    "maturin",
    "python",
    "pip",
    "maturin",
    "python",
    "pip",
    "maturin",
    "python",
    "pip",
    "maturin"
   ],
   "run": [
    "python",
    "numpy",
    "pandas",
    "pyarrow >=1",
    "libgcc-ng",
    "maturin",
    "python",
    "numpy",
    "pandas",
    "pyarrow >=1",
    "libgcc-ng",
    "maturin",
    "python",
    "numpy",
    "pandas",
    "pyarrow >=1",
    "libgcc-ng",
    "maturin",
    "python",
    "numpy",
    "pandas",
    "pyarrow >=1",
    "libgcc-ng",
    "maturin"
   ]
  },
  "source": {
   "sha256": "5d85d9328acfb3651eec4dfc0c049de2b9b1bd7d30971f00eac0a901b6148782",
   "url": "https://pypi.io/packages/source/d/datafusion/datafusion-0.7.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "datafusion",
    "datafusion",
    "datafusion",
    "datafusion"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libgcc-ng",
    "maturin",
    "numpy",
    "pandas",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "DataFusion is an extensible query execution framework, written in Rust,\nthat uses Apache Arrow as its in-memory format.\n",
   "dev_url": "https://github.com/apache/arrow-datafusion",
   "doc_url": "https://arrow.apache.org/datafusion",
   "home": "https://arrow.apache.org/datafusion",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": [
    "LICENSE.txt",
    "THIRDPARTY.yml",
    "LICENSE.txt",
    "THIRDPARTY.yml",
    "LICENSE.txt",
    "THIRDPARTY.yml",
    "LICENSE.txt",
    "THIRDPARTY.yml",
    "LICENSE.txt",
    "THIRDPARTY.yml",
    "LICENSE.txt",
    "THIRDPARTY.yml",
    "LICENSE.txt",
    "THIRDPARTY.yml",
    "LICENSE.txt",
    "THIRDPARTY.yml"
   ],
   "summary": "Extensible query execution framework"
  },
  "build": {
   "number": "0",
   "script": [
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "cpcloud",
    "andygrove",
    "cpcloud",
    "andygrove",
    "cpcloud",
    "andygrove",
    "cpcloud",
    "andygrove",
    "cpcloud",
    "andygrove",
    "cpcloud",
    "andygrove",
    "cpcloud",
    "andygrove",
    "cpcloud",
    "andygrove"
   ]
  },
  "package": {
   "name": "datafusion",
   "version": "0.7.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses"
   ],
   "host": [
    "python",
    "pip",
    "maturin",
    "python",
    "pip",
    "maturin",
    "python",
    "pip",
    "maturin",
    "python",
    "pip",
    "maturin",
    "python",
    "pip",
    "maturin",
    "python",
    "pip",
    "maturin",
    "python",
    "pip",
    "maturin",
    "python",
    "pip",
    "maturin"
   ],
   "run": [
    "python",
    "numpy",
    "pandas",
    "pyarrow >=1",
    "libgcc-ng",
    "maturin",
    "python",
    "numpy",
    "pandas",
    "pyarrow >=1",
    "libgcc-ng",
    "maturin",
    "python",
    "numpy",
    "pandas",
    "pyarrow >=1",
    "libgcc-ng",
    "maturin",
    "python",
    "numpy",
    "pandas",
    "pyarrow >=1",
    "libgcc-ng",
    "maturin",
    "python",
    "pyarrow >=1",
    "python",
    "pyarrow >=1",
    "python",
    "pyarrow >=1",
    "python",
    "pyarrow >=1"
   ]
  },
  "source": {
   "sha256": "5d85d9328acfb3651eec4dfc0c049de2b9b1bd7d30971f00eac0a901b6148782",
   "url": "https://pypi.io/packages/source/d/datafusion/datafusion-0.7.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "datafusion",
    "datafusion",
    "datafusion",
    "datafusion",
    "datafusion",
    "datafusion",
    "datafusion",
    "datafusion"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "datafusion",
 "osx_64_meta_yaml": {
  "about": {
   "description": "DataFusion is an extensible query execution framework, written in Rust,\nthat uses Apache Arrow as its in-memory format.\n",
   "dev_url": "https://github.com/apache/arrow-datafusion",
   "doc_url": "https://arrow.apache.org/datafusion",
   "home": "https://arrow.apache.org/datafusion",
   "license": "Apache-2.0",
   "license_family": "APACHE",
   "license_file": [
    "LICENSE.txt",
    "THIRDPARTY.yml",
    "LICENSE.txt",
    "THIRDPARTY.yml",
    "LICENSE.txt",
    "THIRDPARTY.yml",
    "LICENSE.txt",
    "THIRDPARTY.yml"
   ],
   "summary": "Extensible query execution framework"
  },
  "build": {
   "number": "0",
   "script": [
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv",
    "cargo-bundle-licenses --format yaml --output THIRDPARTY.yml",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "cpcloud",
    "andygrove",
    "cpcloud",
    "andygrove",
    "cpcloud",
    "andygrove",
    "cpcloud",
    "andygrove"
   ]
  },
  "package": {
   "name": "datafusion",
   "version": "0.7.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses",
    "c_compiler_stub",
    "rust_compiler_stub",
    "cargo-bundle-licenses"
   ],
   "host": [
    "python",
    "pip",
    "maturin",
    "python",
    "pip",
    "maturin",
    "python",
    "pip",
    "maturin",
    "python",
    "pip",
    "maturin"
   ],
   "run": [
    "python",
    "pyarrow >=1",
    "python",
    "pyarrow >=1",
    "python",
    "pyarrow >=1",
    "python",
    "pyarrow >=1"
   ]
  },
  "source": {
   "sha256": "5d85d9328acfb3651eec4dfc0c049de2b9b1bd7d30971f00eac0a901b6148782",
   "url": "https://pypi.io/packages/source/d/datafusion/datafusion-0.7.0.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "datafusion",
    "datafusion",
    "datafusion",
    "datafusion"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "datafusion"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/datafusion.json"
 },
 "raw_meta_yaml": "{% set name = \"datafusion\" %}\n{% set version = \"0.7.0\" %}\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\n  sha256: 5d85d9328acfb3651eec4dfc0c049de2b9b1bd7d30971f00eac0a901b6148782\n\n\nbuild:\n  number: 0\n  skip: true  # [win]\n  script:\n    - cargo-bundle-licenses --format yaml --output THIRDPARTY.yml\n    - {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - {{ compiler('c') }}\n    - {{ compiler('rust') }}\n    - cargo-bundle-licenses\n  host:\n    - python\n    - pip\n    - maturin  # [not win]    \n  run:\n    - python\n    - numpy  # [linux]\n    - pandas  # [linux]\n    - pyarrow >=1\n    - importlib_metadata  # [py<38]\n    - importlib-metadata  # [py<38]\n    - libgcc-ng  # [linux]\n    - maturin  # [linux]\n\ntest:\n  imports:\n    - datafusion\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://arrow.apache.org/datafusion\n  license: Apache-2.0\n  license_family: APACHE\n  license_file:\n    - LICENSE.txt\n    - THIRDPARTY.yml\n  summary: Extensible query execution framework\n  description: |\n    DataFusion is an extensible query execution framework, written in Rust,\n    that uses Apache Arrow as its in-memory format.\n  doc_url: https://arrow.apache.org/datafusion\n  dev_url: https://github.com/apache/arrow-datafusion\n\nextra:\n  recipe-maintainers:\n    - cpcloud\n    - andygrove\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "cargo-bundle-licenses",
   "libgcc-ng",
   "maturin",
   "numpy",
   "pandas",
   "pip",
   "pyarrow",
   "python",
   "rust_compiler_stub"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "ctng-compilers",
    "libgcc-ng",
    "maturin",
    "numpy",
    "pandas",
    "pyarrow",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cargo-bundle-licenses",
    "rust_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "maturin",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libgcc-ng",
    "maturin",
    "numpy",
    "pandas",
    "pyarrow >=1",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/d/datafusion/datafusion-0.7.0.tar.gz",
 "version": "0.7.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/datafusion.json"
 }
}