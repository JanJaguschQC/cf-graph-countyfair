{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  },
  "provider": {
   "linux_aarch64": "azure",
   "linux_ppc64le": "azure",
   "win": "azure"
  }
 },
 "feedstock_name": "pyproj",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/pyproj4/pyproj",
   "license": "MIT",
   "license_file": [
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj"
   ],
   "summary": "Python interface to PROJ library"
  },
  "build": {
   "entry_points": [
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main"
   ],
   "number": "1",
   "script": [
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv"
   ],
   "script_env": [
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar"
   ]
  },
  "package": {
   "name": "pyproj",
   "version": "3.5.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj"
   ],
   "run": [
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi"
   ]
  },
  "source": {
   "sha256": "9859d1591c1863414d875ae0759e72c2cffc01ab989dc64137fbac572cc81bf6",
   "url": "https://pypi.io/packages/source/p/pyproj/pyproj-3.5.0.tar.gz"
  },
  "test": {
   "commands": [
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s"
   ],
   "imports": [
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj"
   ],
   "requires": [
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray"
   ],
   "source_files": [
    "test",
    "test",
    "test",
    "test",
    "test",
    "test"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "pip",
    "proj",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "certifi",
    "proj",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "pytest",
    "shapely",
    "xarray"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "https://github.com/pyproj4/pyproj",
   "license": "MIT",
   "license_file": [
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj"
   ],
   "summary": "Python interface to PROJ library"
  },
  "build": {
   "entry_points": [
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main"
   ],
   "number": "1",
   "script": [
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv"
   ],
   "script_env": [
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar"
   ]
  },
  "package": {
   "name": "pyproj",
   "version": "3.5.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj"
   ],
   "run": [
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi"
   ]
  },
  "source": {
   "sha256": "9859d1591c1863414d875ae0759e72c2cffc01ab989dc64137fbac572cc81bf6",
   "url": "https://pypi.io/packages/source/p/pyproj/pyproj-3.5.0.tar.gz"
  },
  "test": {
   "commands": [
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s"
   ],
   "imports": [
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj"
   ],
   "requires": [
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray"
   ],
   "source_files": [
    "test",
    "test",
    "test",
    "test",
    "test",
    "test"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "pip",
    "proj",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "certifi",
    "proj",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "pytest",
    "shapely",
    "xarray"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "home": "https://github.com/pyproj4/pyproj",
   "license": "MIT",
   "license_file": [
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj"
   ],
   "summary": "Python interface to PROJ library"
  },
  "build": {
   "entry_points": [
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main"
   ],
   "number": "1",
   "script": [
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv"
   ],
   "script_env": [
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar"
   ]
  },
  "package": {
   "name": "pyproj",
   "version": "3.5.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj"
   ],
   "run": [
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi"
   ]
  },
  "source": {
   "sha256": "9859d1591c1863414d875ae0759e72c2cffc01ab989dc64137fbac572cc81bf6",
   "url": "https://pypi.io/packages/source/p/pyproj/pyproj-3.5.0.tar.gz"
  },
  "test": {
   "commands": [
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s"
   ],
   "imports": [
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj"
   ],
   "requires": [
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray"
   ],
   "source_files": [
    "test",
    "test",
    "test",
    "test",
    "test",
    "test"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "pip",
    "proj",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "certifi",
    "proj",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "pytest",
    "shapely",
    "xarray"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/pyproj4/pyproj",
   "license": "MIT",
   "license_file": [
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj"
   ],
   "summary": "Python interface to PROJ library"
  },
  "build": {
   "entry_points": [
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main"
   ],
   "number": "1",
   "script": [
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . --no-deps -vv"
   ],
   "script_env": [
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar"
   ]
  },
  "package": {
   "name": "pyproj",
   "version": "3.5.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj"
   ],
   "run": [
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi"
   ]
  },
  "source": {
   "sha256": "9859d1591c1863414d875ae0759e72c2cffc01ab989dc64137fbac572cc81bf6",
   "url": "https://pypi.io/packages/source/p/pyproj/pyproj-3.5.0.tar.gz"
  },
  "test": {
   "commands": [
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "set \"PROJ_NETWORK=ON\"",
    "set \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "set \"PROJ_NETWORK=ON\"",
    "set \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "set \"PROJ_NETWORK=ON\"",
    "set \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "set \"PROJ_NETWORK=ON\"",
    "set \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "set \"PROJ_NETWORK=ON\"",
    "set \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "set \"PROJ_NETWORK=ON\"",
    "set \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s"
   ],
   "imports": [
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj"
   ],
   "requires": [
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray"
   ],
   "source_files": [
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test",
    "test"
   ]
  }
 },
 "name": "pyproj",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/pyproj4/pyproj",
   "license": "MIT",
   "license_file": [
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj"
   ],
   "summary": "Python interface to PROJ library"
  },
  "build": {
   "entry_points": [
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main"
   ],
   "number": "1",
   "script": [
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv"
   ],
   "script_env": [
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar"
   ]
  },
  "package": {
   "name": "pyproj",
   "version": "3.5.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj"
   ],
   "run": [
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi"
   ]
  },
  "source": {
   "sha256": "9859d1591c1863414d875ae0759e72c2cffc01ab989dc64137fbac572cc81bf6",
   "url": "https://pypi.io/packages/source/p/pyproj/pyproj-3.5.0.tar.gz"
  },
  "test": {
   "commands": [
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s"
   ],
   "imports": [
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj"
   ],
   "requires": [
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray"
   ],
   "source_files": [
    "test",
    "test",
    "test",
    "test",
    "test",
    "test"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "pip",
    "proj",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "certifi",
    "proj",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "pytest",
    "shapely",
    "xarray"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "https://github.com/pyproj4/pyproj",
   "license": "MIT",
   "license_file": [
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj"
   ],
   "summary": "Python interface to PROJ library"
  },
  "build": {
   "entry_points": [
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main"
   ],
   "number": "1",
   "script": [
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . --no-deps -vv"
   ],
   "script_env": [
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar"
   ]
  },
  "package": {
   "name": "pyproj",
   "version": "3.5.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj"
   ],
   "run": [
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi"
   ]
  },
  "source": {
   "sha256": "9859d1591c1863414d875ae0759e72c2cffc01ab989dc64137fbac572cc81bf6",
   "url": "https://pypi.io/packages/source/p/pyproj/pyproj-3.5.0.tar.gz"
  },
  "test": {
   "commands": [
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "export \"PROJ_NETWORK=ON\"",
    "export \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s"
   ],
   "imports": [
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj"
   ],
   "requires": [
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray"
   ],
   "source_files": [
    "test",
    "test",
    "test",
    "test"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "pip",
    "proj",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "certifi",
    "proj",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "pytest",
    "shapely",
    "xarray"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyproj"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "win_64",
  "linux_aarch64",
  "linux_ppc64le",
  "osx_arm64",
  "osx_64",
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/pyproj.json"
 },
 "raw_meta_yaml": "{% set version = \"3.5.0\" %}\n\npackage:\n  name: pyproj\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/p/pyproj/pyproj-{{ version }}.tar.gz\n  sha256: 9859d1591c1863414d875ae0759e72c2cffc01ab989dc64137fbac572cc81bf6\n\nbuild:\n  number: 1\n  skip: true  # [py<38]\n  entry_points:\n    - pyproj=pyproj.__main__:main\n  script_env:\n    - PROJ_VERSION={{ proj }}\n  script:\n    - {{ PYTHON }} -m pip install . --no-deps -vv\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - cython                                 # [build_platform != target_platform]\n    - {{ compiler('c') }}\n  host:\n    - python\n    - pip\n    - cython\n    - proj\n  run:\n    - python\n    - proj\n    - certifi\n\ntest:\n  source_files:\n    - test\n  requires:\n    - pytest\n    - shapely\n    - numpy\n    - pandas\n    - xarray\n  imports:\n    - pyproj\n  commands:\n    - pyproj --verbose\n    # make sure we've fixed the issue in https://github.com/conda-forge/pyproj-feedstock/issues/126\n    - export \"PROJ_NETWORK=ON\"           # [unix]\n    - export \"PYPROJ_GLOBAL_CONTEXT=ON\"  # [unix]\n    - set \"PROJ_NETWORK=ON\"              # [win]\n    - set \"PYPROJ_GLOBAL_CONTEXT=ON\"     # [win]\n    - pytest -v -s\nabout:\n  home: https://github.com/pyproj4/pyproj\n  license: MIT\n  license_file:\n    - LICENSE\n    - LICENSE_proj\n  summary: Python interface to PROJ library\n\nextra:\n  recipe-maintainers:\n    - mingwandroid\n    - ocefpaf\n    - snowman2\n    - jorisvandenbossche\n    - xylar\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "certifi",
   "cython",
   "pip",
   "proj",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cython",
    "pip",
    "proj",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "certifi",
    "proj",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "pytest",
    "shapely",
    "xarray"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "pip",
    "proj",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "certifi",
    "proj",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "pytest",
    "shapely",
    "xarray"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/p/pyproj/pyproj-3.5.0.tar.gz",
 "version": "3.5.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/pyproj.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/pyproj4/pyproj",
   "license": "MIT",
   "license_file": [
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj",
    "LICENSE",
    "LICENSE_proj"
   ],
   "summary": "Python interface to PROJ library"
  },
  "build": {
   "entry_points": [
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main",
    "pyproj=pyproj.__main__:main"
   ],
   "number": "1",
   "script": [
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . --no-deps -vv",
    "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . --no-deps -vv"
   ],
   "script_env": [
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0",
    "PROJ_VERSION=9.2.0"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar",
    "mingwandroid",
    "ocefpaf",
    "snowman2",
    "jorisvandenbossche",
    "xylar"
   ]
  },
  "package": {
   "name": "pyproj",
   "version": "3.5.0"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj",
    "python",
    "pip",
    "cython",
    "proj"
   ],
   "run": [
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi",
    "python",
    "proj",
    "certifi"
   ]
  },
  "source": {
   "sha256": "9859d1591c1863414d875ae0759e72c2cffc01ab989dc64137fbac572cc81bf6",
   "url": "https://pypi.io/packages/source/p/pyproj/pyproj-3.5.0.tar.gz"
  },
  "test": {
   "commands": [
    "pyproj --verbose",
    "set \"PROJ_NETWORK=ON\"",
    "set \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "set \"PROJ_NETWORK=ON\"",
    "set \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "set \"PROJ_NETWORK=ON\"",
    "set \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "set \"PROJ_NETWORK=ON\"",
    "set \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "set \"PROJ_NETWORK=ON\"",
    "set \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s",
    "pyproj --verbose",
    "set \"PROJ_NETWORK=ON\"",
    "set \"PYPROJ_GLOBAL_CONTEXT=ON\"",
    "pytest -v -s"
   ],
   "imports": [
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj",
    "pyproj"
   ],
   "requires": [
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray",
    "pytest",
    "shapely",
    "numpy",
    "pandas",
    "xarray"
   ],
   "source_files": [
    "test",
    "test",
    "test",
    "test",
    "test",
    "test"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cython",
    "pip",
    "proj",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "certifi",
    "proj",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "numpy",
    "pandas",
    "pytest",
    "shapely",
    "xarray"
   ]
  }
 }
}