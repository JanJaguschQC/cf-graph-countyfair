{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "linux_aarch64": "linux_64",
   "linux_ppc64le": "linux_64",
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "python-libarchive-c",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "home": "https://github.com/Changaco/python-libarchive-c",
   "license": "CC0-1.0",
   "license_family": "CC",
   "license_file": "cc0-1.0.txt",
   "summary": "Python interface to libarchive"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "python-libarchive-c",
   "version": "4.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python"
   ]
  },
  "source": [
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84"
   ],
   "files": [
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar"
   ],
   "imports": [
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive"
   ],
   "requires": [
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov"
   ],
   "source_files": [
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libarchive",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "pytest-cov"
   ]
  }
 },
 "linux_aarch64_meta_yaml": {
  "about": {
   "home": "https://github.com/Changaco/python-libarchive-c",
   "license": "CC0-1.0",
   "license_family": "CC",
   "license_file": "cc0-1.0.txt",
   "summary": "Python interface to libarchive"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "python-libarchive-c",
   "version": "4.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python"
   ]
  },
  "source": [
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84"
   ],
   "files": [
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar"
   ],
   "imports": [
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive"
   ],
   "requires": [
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov"
   ],
   "source_files": [
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst"
   ]
  }
 },
 "linux_aarch64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libarchive",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "pytest-cov"
   ]
  }
 },
 "linux_ppc64le_meta_yaml": {
  "about": {
   "home": "https://github.com/Changaco/python-libarchive-c",
   "license": "CC0-1.0",
   "license_family": "CC",
   "license_file": "cc0-1.0.txt",
   "summary": "Python interface to libarchive"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "python-libarchive-c",
   "version": "4.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python"
   ]
  },
  "source": [
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84"
   ],
   "files": [
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar"
   ],
   "imports": [
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive"
   ],
   "requires": [
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov"
   ],
   "source_files": [
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst"
   ]
  }
 },
 "linux_ppc64le_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libarchive",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "pytest-cov"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "home": "https://github.com/Changaco/python-libarchive-c",
   "license": "CC0-1.0",
   "license_family": "CC",
   "license_file": "cc0-1.0.txt",
   "summary": "Python interface to libarchive"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "python-libarchive-c",
   "version": "4.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python"
   ]
  },
  "source": [
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test\\\\hello_world.xar')\"",
    "python -c \"import libarchive; libarchive.extract_file('test\\\\hello_world.xar')\"",
    "python -c \"import libarchive; libarchive.extract_file('test\\\\hello_world.xar')\"",
    "python -c \"import libarchive; libarchive.extract_file('test\\\\hello_world.xar')\"",
    "python -c \"import libarchive; libarchive.extract_file('test\\\\hello_world.xar')\"",
    "python -c \"import libarchive; libarchive.extract_file('test\\\\hello_world.xar')\""
   ],
   "files": [
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar"
   ],
   "imports": [
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive"
   ],
   "requires": [
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov"
   ],
   "source_files": [
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "README.rst",
    "README.rst",
    "README.rst",
    "README.rst",
    "README.rst",
    "README.rst"
   ]
  }
 },
 "name": "python-libarchive-c",
 "osx_64_meta_yaml": {
  "about": {
   "home": "https://github.com/Changaco/python-libarchive-c",
   "license": "CC0-1.0",
   "license_family": "CC",
   "license_file": "cc0-1.0.txt",
   "summary": "Python interface to libarchive"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "python-libarchive-c",
   "version": "4.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python"
   ]
  },
  "source": [
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\""
   ],
   "files": [
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar"
   ],
   "imports": [
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive"
   ],
   "requires": [
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov"
   ],
   "source_files": [
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libarchive",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "pytest-cov"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "home": "https://github.com/Changaco/python-libarchive-c",
   "license": "CC0-1.0",
   "license_family": "CC",
   "license_file": "cc0-1.0.txt",
   "summary": "Python interface to libarchive"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "python-libarchive-c",
   "version": "4.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python"
   ]
  },
  "source": [
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"",
    "python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"",
    "python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"",
    "pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\""
   ],
   "files": [
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar"
   ],
   "imports": [
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive"
   ],
   "requires": [
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov"
   ],
   "source_files": [
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst",
    "tests",
    "README.rst"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libarchive",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "pytest-cov"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "python-libarchive-c"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "win_64",
  "osx_arm64",
  "linux_64",
  "linux_ppc64le",
  "linux_aarch64",
  "osx_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/python-libarchive-c.json"
 },
 "raw_meta_yaml": "{% set version = \"4.0\" %}\n\npackage:\n  name: python-libarchive-c\n  version: {{ version }}\n\nsource:\n  - url: https://pypi.io/packages/source/l/libarchive-c/libarchive-c-{{ version }}.tar.gz\n    sha256: a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5\n    patches:\n      # TODO: follow up with upstream https://github.com/Changaco/python-libarchive-c/pull/120\n      - 0000-read-with-utf8.patch\nbuild:\n  number: 2\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n  host:\n    - pip\n    - python\n  run:\n    - libarchive\n    - python\n\ntest:\n  source_files:\n    - tests  # [unix]\n    - README.rst\n  files:\n    - test/hello_world.xar\n  imports:\n    - libarchive\n  requires:\n    - mock\n    - pytest-cov\n  commands:\n    - python -c \"import libarchive; libarchive.extract_file('test/hello_world.xar')\"  # [not win]\n    - python -c \"import libarchive; libarchive.extract_file('test\\\\hello_world.xar')\"  # [win]\n    - python -c \"import os, shutil, libarchive; shutil.copytree(os.path.dirname(libarchive.__file__), 'libarchive')\"  # [unix]\n    - pytest -vv --cov libarchive --cov-report term-missing:skip-covered --cov-fail-under=84  # [linux]\n    - pytest -vv --cov libarchive -k \"not (test_fd or test_files or test_buffers or atime_ctime or custom_writer)\"  # [osx]\n\nabout:\n  home: https://github.com/Changaco/python-libarchive-c\n  license: CC0-1.0\n  license_family: CC\n  summary: Python interface to libarchive\n  license_file: cc0-1.0.txt\n\n\nextra:\n  recipe-maintainers:\n    - bollwyvl\n    - mingwandroid\n    - ocefpaf\n",
 "req": {
  "__set__": true,
  "elements": [
   "libarchive",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libarchive",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "pytest-cov"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libarchive",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "pytest-cov"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz",
 "version": "4.0",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/python-libarchive-c.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "home": "https://github.com/Changaco/python-libarchive-c",
   "license": "CC0-1.0",
   "license_family": "CC",
   "license_file": "cc0-1.0.txt",
   "summary": "Python interface to libarchive"
  },
  "build": {
   "number": "2",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf",
    "bollwyvl",
    "mingwandroid",
    "ocefpaf"
   ]
  },
  "package": {
   "name": "python-libarchive-c",
   "version": "4.0"
  },
  "requirements": {
   "build": [],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python",
    "libarchive",
    "python"
   ]
  },
  "source": [
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   },
   {
    "patches": [
     "0000-read-with-utf8.patch"
    ],
    "sha256": "a5b41ade94ba58b198d778e68000f6b7de41da768de7140c984f71d7fa8416e5",
    "url": "https://pypi.io/packages/source/l/libarchive-c/libarchive-c-4.0.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "python -c \"import libarchive; libarchive.extract_file('test\\\\hello_world.xar')\"",
    "python -c \"import libarchive; libarchive.extract_file('test\\\\hello_world.xar')\"",
    "python -c \"import libarchive; libarchive.extract_file('test\\\\hello_world.xar')\"",
    "python -c \"import libarchive; libarchive.extract_file('test\\\\hello_world.xar')\"",
    "python -c \"import libarchive; libarchive.extract_file('test\\\\hello_world.xar')\"",
    "python -c \"import libarchive; libarchive.extract_file('test\\\\hello_world.xar')\""
   ],
   "files": [
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar",
    "test/hello_world.xar"
   ],
   "imports": [
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive",
    "libarchive"
   ],
   "requires": [
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov",
    "mock",
    "pytest-cov"
   ],
   "source_files": [
    "README.rst",
    "README.rst",
    "README.rst",
    "README.rst",
    "README.rst",
    "README.rst"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": []
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libarchive",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "mock",
    "pytest-cov"
   ]
  }
 }
}