{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "build_platform": {
   "osx_arm64": "osx_64"
  }
 },
 "feedstock_name": "pyworld",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "PyWorld is a wrapper for WORLD, which is free software for\n high-quality speech analysis, manipulation and synthesis. It can\n estimate fundamental frequency (F0), aperiodicity and spectral\n envelope, and also generate the speech like input speech with only\n estimated parameters.\n",
   "home": "https://github.com/JeremyCCHsu/Python-Wrapper-for-World-Vocoder",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "PyWorld is a Python wrapper for WORLD vocoder."
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan"
   ]
  },
  "package": {
   "name": "pyworld",
   "version": "0.3.3"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python"
   ],
   "run": [
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "a3a81755983dfa2299a9e2947752582ddcc84a5c277b04f4595ce4406372d1e5",
   "url": "https://pypi.io/packages/source/p/pyworld/pyworld-0.3.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "PyWorld is a wrapper for WORLD, which is free software for\n high-quality speech analysis, manipulation and synthesis. It can\n estimate fundamental frequency (F0), aperiodicity and spectral\n envelope, and also generate the speech like input speech with only\n estimated parameters.\n",
   "home": "https://github.com/JeremyCCHsu/Python-Wrapper-for-World-Vocoder",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "PyWorld is a Python wrapper for WORLD vocoder."
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan"
   ]
  },
  "package": {
   "name": "pyworld",
   "version": "0.3.3"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python"
   ],
   "run": [
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "a3a81755983dfa2299a9e2947752582ddcc84a5c277b04f4595ce4406372d1e5",
   "url": "https://pypi.io/packages/source/p/pyworld/pyworld-0.3.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "pyworld",
 "osx_64_meta_yaml": {
  "about": {
   "description": "PyWorld is a wrapper for WORLD, which is free software for\n high-quality speech analysis, manipulation and synthesis. It can\n estimate fundamental frequency (F0), aperiodicity and spectral\n envelope, and also generate the speech like input speech with only\n estimated parameters.\n",
   "home": "https://github.com/JeremyCCHsu/Python-Wrapper-for-World-Vocoder",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "PyWorld is a Python wrapper for WORLD vocoder."
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan"
   ]
  },
  "package": {
   "name": "pyworld",
   "version": "0.3.3"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python"
   ],
   "run": [
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "a3a81755983dfa2299a9e2947752582ddcc84a5c277b04f4595ce4406372d1e5",
   "url": "https://pypi.io/packages/source/p/pyworld/pyworld-0.3.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "osx_arm64_meta_yaml": {
  "about": {
   "description": "PyWorld is a wrapper for WORLD, which is free software for\n high-quality speech analysis, manipulation and synthesis. It can\n estimate fundamental frequency (F0), aperiodicity and spectral\n envelope, and also generate the speech like input speech with only\n estimated parameters.\n",
   "home": "https://github.com/JeremyCCHsu/Python-Wrapper-for-World-Vocoder",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "PyWorld is a Python wrapper for WORLD vocoder."
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan"
   ]
  },
  "package": {
   "name": "pyworld",
   "version": "0.3.3"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python"
   ],
   "run": [
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "a3a81755983dfa2299a9e2947752582ddcc84a5c277b04f4595ce4406372d1e5",
   "url": "https://pypi.io/packages/source/p/pyworld/pyworld-0.3.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_arm64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "pyworld"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "win_64",
  "osx_arm64",
  "osx_64",
  "linux_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/pyworld.json"
 },
 "raw_meta_yaml": "{% set name = \"pyworld\" %}\n{% set version = \"0.3.3\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/pyworld-{{ version }}.tar.gz\n  sha256: a3a81755983dfa2299a9e2947752582ddcc84a5c277b04f4595ce4406372d1e5\n\nbuild:\n  number: 0\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - python                                 # [build_platform != target_platform]\n    - cross-python_{{ target_platform }}     # [build_platform != target_platform]\n    - numpy                                  # [build_platform != target_platform]\n    - {{ compiler('cxx') }}\n  host:\n    - numpy\n    - pip\n    - python\n  run:\n    - cython >=0.24.0\n    - python\n    - {{ pin_compatible('numpy') }}\n\ntest:\n  imports:\n    - pyworld\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://github.com/JeremyCCHsu/Python-Wrapper-for-World-Vocoder\n  summary: PyWorld is a Python wrapper for WORLD vocoder.\n  license: MIT\n  license_file: LICENSE\n  description: |\n    PyWorld is a wrapper for WORLD, which is free software for\n     high-quality speech analysis, manipulation and synthesis. It can\n     estimate fundamental frequency (F0), aperiodicity and spectral\n     envelope, and also generate the speech like input speech with only\n     estimated parameters.\n\nextra:\n  recipe-maintainers:\n    - thewchan\n",
 "req": {
  "__set__": true,
  "elements": [
   "cxx_compiler_stub",
   "cython",
   "numpy",
   "pip",
   "python"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub",
    "cython",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cython >=0.24.0",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/p/pyworld/pyworld-0.3.3.tar.gz",
 "version": "0.3.3",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/pyworld.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "PyWorld is a wrapper for WORLD, which is free software for\n high-quality speech analysis, manipulation and synthesis. It can\n estimate fundamental frequency (F0), aperiodicity and spectral\n envelope, and also generate the speech like input speech with only\n estimated parameters.\n",
   "home": "https://github.com/JeremyCCHsu/Python-Wrapper-for-World-Vocoder",
   "license": "MIT",
   "license_file": "LICENSE",
   "summary": "PyWorld is a Python wrapper for WORLD vocoder."
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan",
    "thewchan"
   ]
  },
  "package": {
   "name": "pyworld",
   "version": "0.3.3"
  },
  "requirements": {
   "build": [
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub",
    "cxx_compiler_stub"
   ],
   "host": [
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python",
    "numpy",
    "pip",
    "python"
   ],
   "run": [
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy",
    "cython >=0.24.0",
    "python",
    "numpy"
   ]
  },
  "source": {
   "sha256": "a3a81755983dfa2299a9e2947752582ddcc84a5c277b04f4595ce4406372d1e5",
   "url": "https://pypi.io/packages/source/p/pyworld/pyworld-0.3.3.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld",
    "pyworld"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "cxx_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "numpy",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "cython",
    "numpy",
    "python"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}