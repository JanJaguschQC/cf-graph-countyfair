{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {
  "bot": {
   "automerge": true
  }
 },
 "feedstock_name": "lbmpy",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Run fast fluid simulations based on the lattice Boltzmann method\nin Python on CPUs and GPUs. lbmpy creates highly optimized LB compute\nkernels in C or CUDA, for a wide variety of different collision\noperators, including MRT, entropic, and cumulant schemes.\n",
   "dev_url": "https://i10git.cs.fau.de/pycodegen/lbmpy/",
   "doc_url": "https://i10git.cs.fau.de/pycodegen/lbmpy/",
   "home": "https://i10git.cs.fau.de/pycodegen/lbmpy/",
   "license": "AGPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "COPYING.txt",
   "summary": "Code Generation for Lattice Boltzmann Methods"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "jan-janssen",
    "jan-janssen"
   ]
  },
  "package": {
   "name": "lbmpy",
   "version": "1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2",
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2",
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2"
   ]
  },
  "source": {
   "sha256": "df9d40506ba64641db2ead414a9535de5af85b775ae0bc4669b1d7db84d8a98c",
   "url": "https://pypi.io/packages/source/l/lbmpy/lbmpy-1.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "lbmpy",
    "lbmpy.advanced_streaming",
    "lbmpy",
    "lbmpy.advanced_streaming",
    "lbmpy",
    "lbmpy.advanced_streaming"
   ],
   "requires": [
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pystencils",
    "python",
    "sympy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Run fast fluid simulations based on the lattice Boltzmann method\nin Python on CPUs and GPUs. lbmpy creates highly optimized LB compute\nkernels in C or CUDA, for a wide variety of different collision\noperators, including MRT, entropic, and cumulant schemes.\n",
   "dev_url": "https://i10git.cs.fau.de/pycodegen/lbmpy/",
   "doc_url": "https://i10git.cs.fau.de/pycodegen/lbmpy/",
   "home": "https://i10git.cs.fau.de/pycodegen/lbmpy/",
   "license": "AGPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "COPYING.txt",
   "summary": "Code Generation for Lattice Boltzmann Methods"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen",
    "jan-janssen"
   ]
  },
  "package": {
   "name": "lbmpy",
   "version": "1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2",
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2",
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2",
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2",
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2",
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2",
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2",
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2",
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2"
   ]
  },
  "source": {
   "sha256": "df9d40506ba64641db2ead414a9535de5af85b775ae0bc4669b1d7db84d8a98c",
   "url": "https://pypi.io/packages/source/l/lbmpy/lbmpy-1.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "lbmpy",
    "lbmpy.advanced_streaming",
    "lbmpy",
    "lbmpy.advanced_streaming",
    "lbmpy",
    "lbmpy.advanced_streaming",
    "lbmpy",
    "lbmpy.advanced_streaming",
    "lbmpy",
    "lbmpy.advanced_streaming",
    "lbmpy",
    "lbmpy.advanced_streaming",
    "lbmpy",
    "lbmpy.advanced_streaming",
    "lbmpy",
    "lbmpy.advanced_streaming",
    "lbmpy",
    "lbmpy.advanced_streaming"
   ],
   "requires": [
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "name": "lbmpy",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Run fast fluid simulations based on the lattice Boltzmann method\nin Python on CPUs and GPUs. lbmpy creates highly optimized LB compute\nkernels in C or CUDA, for a wide variety of different collision\noperators, including MRT, entropic, and cumulant schemes.\n",
   "dev_url": "https://i10git.cs.fau.de/pycodegen/lbmpy/",
   "doc_url": "https://i10git.cs.fau.de/pycodegen/lbmpy/",
   "home": "https://i10git.cs.fau.de/pycodegen/lbmpy/",
   "license": "AGPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "COPYING.txt",
   "summary": "Code Generation for Lattice Boltzmann Methods"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/bin/python -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "jan-janssen",
    "jan-janssen"
   ]
  },
  "package": {
   "name": "lbmpy",
   "version": "1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2",
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2",
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2"
   ]
  },
  "source": {
   "sha256": "df9d40506ba64641db2ead414a9535de5af85b775ae0bc4669b1d7db84d8a98c",
   "url": "https://pypi.io/packages/source/l/lbmpy/lbmpy-1.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "lbmpy",
    "lbmpy.advanced_streaming",
    "lbmpy",
    "lbmpy.advanced_streaming",
    "lbmpy",
    "lbmpy.advanced_streaming"
   ],
   "requires": [
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pystencils",
    "python",
    "sympy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "lbmpy"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/lbmpy.json"
 },
 "raw_meta_yaml": "{% set name = \"lbmpy\" %}\n{% set version = \"1.2\" %}\n\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/lbmpy-{{ version }}.tar.gz\n  sha256: df9d40506ba64641db2ead414a9535de5af85b775ae0bc4669b1d7db84d8a98c\n\nbuild:\n  number: 0\n  skip: true  # [py<38]\n  script: {{ PYTHON }} -m pip install . -vv\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n  host:\n    - pip\n    - python\n  run:\n    - numpy >=1.11.0\n    - pystencils >=1.0\n    - python\n    - sympy >=1.2\n\ntest:\n  imports:\n    - lbmpy\n    - lbmpy.advanced_streaming\n  commands:\n    - pip check\n  requires:\n    - pip\n\nabout:\n  home: https://i10git.cs.fau.de/pycodegen/lbmpy/\n  license: AGPL-3.0-or-later\n  license_family: GPL\n  license_file: COPYING.txt\n  summary: Code Generation for Lattice Boltzmann Methods\n  description: |\n    Run fast fluid simulations based on the lattice Boltzmann method\n    in Python on CPUs and GPUs. lbmpy creates highly optimized LB compute\n    kernels in C or CUDA, for a wide variety of different collision\n    operators, including MRT, entropic, and cumulant schemes.\n  doc_url: https://i10git.cs.fau.de/pycodegen/lbmpy/\n  dev_url: https://i10git.cs.fau.de/pycodegen/lbmpy/\n\nextra:\n  recipe-maintainers:\n    - jan-janssen\n",
 "req": {
  "__set__": true,
  "elements": [
   "c_compiler_stub",
   "numpy",
   "pip",
   "pystencils",
   "python",
   "sympy"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "numpy",
    "pystencils",
    "python",
    "sympy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 },
 "url": "https://pypi.io/packages/source/l/lbmpy/lbmpy-1.2.tar.gz",
 "version": "1.2",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/lbmpy.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "Run fast fluid simulations based on the lattice Boltzmann method\nin Python on CPUs and GPUs. lbmpy creates highly optimized LB compute\nkernels in C or CUDA, for a wide variety of different collision\noperators, including MRT, entropic, and cumulant schemes.\n",
   "dev_url": "https://i10git.cs.fau.de/pycodegen/lbmpy/",
   "doc_url": "https://i10git.cs.fau.de/pycodegen/lbmpy/",
   "home": "https://i10git.cs.fau.de/pycodegen/lbmpy/",
   "license": "AGPL-3.0-or-later",
   "license_family": "GPL",
   "license_file": "COPYING.txt",
   "summary": "Code Generation for Lattice Boltzmann Methods"
  },
  "build": {
   "number": "0",
   "script": "/usr/share/miniconda3/envs/cf-scripts/conda-bld/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_/python.exe -m pip install . -vv"
  },
  "extra": {
   "recipe-maintainers": [
    "jan-janssen",
    "jan-janssen",
    "jan-janssen"
   ]
  },
  "package": {
   "name": "lbmpy",
   "version": "1.2"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "c_compiler_stub",
    "c_compiler_stub"
   ],
   "host": [
    "pip",
    "python",
    "pip",
    "python",
    "pip",
    "python"
   ],
   "run": [
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2",
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2",
    "numpy >=1.11.0",
    "pystencils >=1.0",
    "python",
    "sympy >=1.2"
   ]
  },
  "source": {
   "sha256": "df9d40506ba64641db2ead414a9535de5af85b775ae0bc4669b1d7db84d8a98c",
   "url": "https://pypi.io/packages/source/l/lbmpy/lbmpy-1.2.tar.gz"
  },
  "test": {
   "commands": [
    "pip check",
    "pip check",
    "pip check"
   ],
   "imports": [
    "lbmpy",
    "lbmpy.advanced_streaming",
    "lbmpy",
    "lbmpy.advanced_streaming",
    "lbmpy",
    "lbmpy.advanced_streaming"
   ],
   "requires": [
    "pip",
    "pip",
    "pip"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "pip",
    "python"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "numpy",
    "pystencils",
    "python",
    "sympy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "pip"
   ]
  }
 }
}