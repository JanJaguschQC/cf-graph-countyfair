{
 "archived": false,
 "branch": "main",
 "conda-forge.yml": {},
 "feedstock_name": "psi4",
 "hash_type": "sha256",
 "linux_64_meta_yaml": {
  "about": {
   "description": "Psi4 is an open-source suite of ab initio quantum chemistry programs designed for efficient,\nhigh-accuracy simulations of a variety of molecular properties. We can routinely perform computations\nwith more than 2500 basis functions running serially or on multi-core machines. With computationally\ndemanding portions written in C++, Pybind11 exports many of the C++ classes into Python, and a\nflexible Python driver, Psi4 strives to be friendly to both users and developers.\n",
   "dev_url": "https://github.com/psi4/psi4",
   "doc_source_url": "https://github.com/psi4/psi4/tree/master/doc/sphinxman/source",
   "doc_url": "http://psicode.org/psi4manual/master/index.html",
   "home": "http://psicode.org",
   "license": "LGPL-3.0-only AND BSD-3-Clause AND MIT",
   "license_family": "LGPL",
   "license_file": [
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES",
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES",
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES"
   ],
   "license_url": "https://opensource.org/license/lgpl-3-0/",
   "summary": "Open-Source Quantum Chemistry - an electronic structure package in C++ driven by Python"
  },
  "build": {
   "binary_relocation": true,
   "ignore_run_exports": [
    "libint",
    "libint",
    "libint"
   ],
   "number": "0",
   "run_exports": [
    "psi4",
    "psi4",
    "psi4"
   ],
   "script_env": [
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084",
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084",
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "loriab",
    "jturney",
    "fevangelista",
    "loriab",
    "jturney",
    "fevangelista",
    "loriab",
    "jturney",
    "fevangelista"
   ]
  },
  "package": {
   "name": "psi4",
   "version": "1.8a1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp"
   ],
   "host": [
    "eigen",
    "boost-cpp",
    "mkl-devel",
    "mkl",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh",
    "eigen",
    "boost-cpp",
    "mkl-devel",
    "mkl",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh",
    "eigen",
    "boost-cpp",
    "mkl-devel",
    "mkl",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh"
   ],
   "run": [
    "llvm-openmp",
    "libblas * *mkl",
    "mkl",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine",
    "llvm-openmp",
    "libblas * *mkl",
    "mkl",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine",
    "llvm-openmp",
    "libblas * *mkl",
    "mkl",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine"
   ],
   "run_constrained": [
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2",
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2",
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2"
   ]
  },
  "source": [
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   },
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   },
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "ls -l $PREFIX/lib",
    "ls -l $PREFIX/share/cmake/psi4",
    "ls -l $SP_DIR/psi4",
    "test -f $SP_DIR/psi4/core*.so",
    "test -f $SP_DIR/psi4/driver/driver.py",
    "test -f $PREFIX/bin/psi4",
    "psi4 --version",
    "psi4 --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "test -f $PREFIX/include/psi4/psi4-dec.h",
    "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
    "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
    "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
    "ldd -v $SP_DIR/psi4/core*.so",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\"",
    "ls -l $PREFIX/lib",
    "ls -l $PREFIX/share/cmake/psi4",
    "ls -l $SP_DIR/psi4",
    "test -f $SP_DIR/psi4/core*.so",
    "test -f $SP_DIR/psi4/driver/driver.py",
    "test -f $PREFIX/bin/psi4",
    "psi4 --version",
    "psi4 --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "test -f $PREFIX/include/psi4/psi4-dec.h",
    "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
    "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
    "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
    "ldd -v $SP_DIR/psi4/core*.so",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\"",
    "ls -l $PREFIX/lib",
    "ls -l $PREFIX/share/cmake/psi4",
    "ls -l $SP_DIR/psi4",
    "test -f $SP_DIR/psi4/core*.so",
    "test -f $SP_DIR/psi4/driver/driver.py",
    "test -f $PREFIX/bin/psi4",
    "psi4 --version",
    "psi4 --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "test -f $PREFIX/include/psi4/psi4-dec.h",
    "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
    "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
    "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
    "ldd -v $SP_DIR/psi4/core*.so",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\""
   ],
   "imports": [
    "psi4",
    "psi4",
    "psi4"
   ],
   "requires": [
    "pip",
    "pytest",
    "pytest-xdist",
    "pyddx",
    "dftd3-python",
    "dftd4-python",
    "toml",
    "pylibefp",
    "gcp-correction",
    "geometric",
    "pymdi",
    "pip",
    "pytest",
    "pytest-xdist",
    "pyddx",
    "dftd3-python",
    "dftd4-python",
    "toml",
    "pylibefp",
    "gcp-correction",
    "geometric",
    "pymdi",
    "pip",
    "pytest",
    "pytest-xdist",
    "pyddx",
    "dftd3-python",
    "dftd4-python",
    "toml",
    "pylibefp",
    "gcp-correction",
    "geometric",
    "pymdi"
   ]
  }
 },
 "linux_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "llvm-openmp",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "dkh",
    "eigen",
    "gau2grid",
    "libint",
    "libxc-c",
    "mkl",
    "mkl-devel",
    "optking",
    "pybind11",
    "pybind11-abi",
    "python",
    "qcelemental",
    "qcengine"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libblas",
    "libint",
    "llvm-openmp",
    "mkl",
    "msgpack-python",
    "networkx",
    "numpy",
    "optking",
    "python",
    "qcelemental",
    "qcengine",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "dftd3-python",
    "dftd4-python",
    "gcp-correction",
    "geometric",
    "pip",
    "pyddx",
    "pylibefp",
    "pymdi",
    "pytest",
    "pytest-xdist",
    "toml"
   ]
  }
 },
 "meta_yaml": {
  "about": {
   "description": "Psi4 is an open-source suite of ab initio quantum chemistry programs designed for efficient,\nhigh-accuracy simulations of a variety of molecular properties. We can routinely perform computations\nwith more than 2500 basis functions running serially or on multi-core machines. With computationally\ndemanding portions written in C++, Pybind11 exports many of the C++ classes into Python, and a\nflexible Python driver, Psi4 strives to be friendly to both users and developers.\n",
   "dev_url": "https://github.com/psi4/psi4",
   "doc_source_url": "https://github.com/psi4/psi4/tree/master/doc/sphinxman/source",
   "doc_url": "http://psicode.org/psi4manual/master/index.html",
   "home": "http://psicode.org",
   "license": "LGPL-3.0-only AND BSD-3-Clause AND MIT",
   "license_family": "LGPL",
   "license_file": [
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES",
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES",
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES",
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES",
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES",
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES",
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES",
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES",
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES"
   ],
   "license_url": "https://opensource.org/license/lgpl-3-0/",
   "summary": "Open-Source Quantum Chemistry - an electronic structure package in C++ driven by Python"
  },
  "build": {
   "binary_relocation": true,
   "ignore_run_exports": [
    "libint",
    "libint",
    "libint",
    "libint",
    "libint",
    "libint",
    "libint",
    "libint",
    "libint"
   ],
   "number": "0",
   "run_exports": [
    "psi4",
    "psi4",
    "psi4",
    "psi4",
    "psi4",
    "psi4",
    "psi4",
    "psi4",
    "psi4"
   ],
   "script_env": [
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084",
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084",
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084",
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084",
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084",
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084",
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084",
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084",
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "loriab",
    "jturney",
    "fevangelista",
    "loriab",
    "jturney",
    "fevangelista",
    "loriab",
    "jturney",
    "fevangelista",
    "loriab",
    "jturney",
    "fevangelista",
    "loriab",
    "jturney",
    "fevangelista",
    "loriab",
    "jturney",
    "fevangelista",
    "loriab",
    "jturney",
    "fevangelista",
    "loriab",
    "jturney",
    "fevangelista",
    "loriab",
    "jturney",
    "fevangelista"
   ]
  },
  "package": {
   "name": "psi4",
   "version": "1.8a1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "eigen",
    "boost-cpp",
    "mkl-devel",
    "mkl",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh",
    "eigen",
    "boost-cpp",
    "mkl-devel",
    "mkl",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh",
    "eigen",
    "boost-cpp",
    "mkl-devel",
    "mkl",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh",
    "eigen",
    "boost-cpp",
    "mkl-devel",
    "mkl",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh",
    "eigen",
    "boost-cpp",
    "mkl-devel",
    "mkl",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh",
    "eigen",
    "boost-cpp",
    "mkl-devel",
    "mkl",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh",
    "eigen",
    "boost-cpp",
    "mkl-devel 2022.1.0",
    "mkl 2022.1.0",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh",
    "eigen",
    "boost-cpp",
    "mkl-devel 2022.1.0",
    "mkl 2022.1.0",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh",
    "eigen",
    "boost-cpp",
    "mkl-devel 2022.1.0",
    "mkl 2022.1.0",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh"
   ],
   "run": [
    "llvm-openmp",
    "libblas * *mkl",
    "mkl",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine",
    "llvm-openmp",
    "libblas * *mkl",
    "mkl",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine",
    "llvm-openmp",
    "libblas * *mkl",
    "mkl",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine",
    "llvm-openmp",
    "libblas * *mkl",
    "mkl",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine",
    "llvm-openmp",
    "libblas * *mkl",
    "mkl",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine",
    "llvm-openmp",
    "libblas * *mkl",
    "mkl",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine",
    "intel-openmp",
    "libblas * *mkl",
    "mkl 2022.1.0",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine",
    "intel-openmp",
    "libblas * *mkl",
    "mkl 2022.1.0",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine",
    "intel-openmp",
    "libblas * *mkl",
    "mkl 2022.1.0",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine"
   ],
   "run_constrained": [
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2",
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2",
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2",
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2",
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2",
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2",
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2",
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2",
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2"
   ]
  },
  "source": [
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   },
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   },
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   },
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   },
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   },
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   },
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   },
   {
    "folder": "external_src",
    "sha256": "d9c6ad3976183f54b676335885d8557d67ca7b25ac4115b91b4cc42281d95f7c",
    "url": "https://github.com/psi4/iomp5md/archive/31b4ccb.tar.gz"
   },
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   },
   {
    "folder": "external_src",
    "sha256": "d9c6ad3976183f54b676335885d8557d67ca7b25ac4115b91b4cc42281d95f7c",
    "url": "https://github.com/psi4/iomp5md/archive/31b4ccb.tar.gz"
   },
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   },
   {
    "folder": "external_src",
    "sha256": "d9c6ad3976183f54b676335885d8557d67ca7b25ac4115b91b4cc42281d95f7c",
    "url": "https://github.com/psi4/iomp5md/archive/31b4ccb.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "ls -l $PREFIX/lib",
    "ls -l $PREFIX/share/cmake/psi4",
    "ls -l $SP_DIR/psi4",
    "test -f $SP_DIR/psi4/core*.so",
    "test -f $SP_DIR/psi4/driver/driver.py",
    "test -f $PREFIX/bin/psi4",
    "psi4 --version",
    "psi4 --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "test -f $PREFIX/include/psi4/psi4-dec.h",
    "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
    "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
    "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
    "ldd -v $SP_DIR/psi4/core*.so",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\"",
    "ls -l $PREFIX/lib",
    "ls -l $PREFIX/share/cmake/psi4",
    "ls -l $SP_DIR/psi4",
    "test -f $SP_DIR/psi4/core*.so",
    "test -f $SP_DIR/psi4/driver/driver.py",
    "test -f $PREFIX/bin/psi4",
    "psi4 --version",
    "psi4 --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "test -f $PREFIX/include/psi4/psi4-dec.h",
    "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
    "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
    "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
    "ldd -v $SP_DIR/psi4/core*.so",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\"",
    "ls -l $PREFIX/lib",
    "ls -l $PREFIX/share/cmake/psi4",
    "ls -l $SP_DIR/psi4",
    "test -f $SP_DIR/psi4/core*.so",
    "test -f $SP_DIR/psi4/driver/driver.py",
    "test -f $PREFIX/bin/psi4",
    "psi4 --version",
    "psi4 --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "test -f $PREFIX/include/psi4/psi4-dec.h",
    "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
    "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
    "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
    "ldd -v $SP_DIR/psi4/core*.so",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\"",
    "ls -l $PREFIX/lib",
    "ls -l $PREFIX/share/cmake/psi4",
    "ls -l $SP_DIR/psi4",
    "test -f $SP_DIR/psi4/core*.so",
    "test -f $SP_DIR/psi4/driver/driver.py",
    "test -f $PREFIX/bin/psi4",
    "psi4 --version",
    "psi4 --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "test -f $PREFIX/include/psi4/psi4-dec.h",
    "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
    "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
    "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
    "otool -L $SP_DIR/psi4/core*.so",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\"",
    "ls -l $PREFIX/lib",
    "ls -l $PREFIX/share/cmake/psi4",
    "ls -l $SP_DIR/psi4",
    "test -f $SP_DIR/psi4/core*.so",
    "test -f $SP_DIR/psi4/driver/driver.py",
    "test -f $PREFIX/bin/psi4",
    "psi4 --version",
    "psi4 --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "test -f $PREFIX/include/psi4/psi4-dec.h",
    "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
    "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
    "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
    "otool -L $SP_DIR/psi4/core*.so",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\"",
    "ls -l $PREFIX/lib",
    "ls -l $PREFIX/share/cmake/psi4",
    "ls -l $SP_DIR/psi4",
    "test -f $SP_DIR/psi4/core*.so",
    "test -f $SP_DIR/psi4/driver/driver.py",
    "test -f $PREFIX/bin/psi4",
    "psi4 --version",
    "psi4 --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "test -f $PREFIX/include/psi4/psi4-dec.h",
    "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
    "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
    "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
    "otool -L $SP_DIR/psi4/core*.so",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\"",
    "dir %PREFIX%\\\\Library\\\\lib",
    "dir %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4",
    "dir %SP_DIR%\\\\psi4",
    "if not exist %SP_DIR%\\\\psi4\\\\core*.pyd exit 1",
    "if not exist %SP_DIR%\\\\psi4\\\\driver\\\\driver.py exit 1",
    "if exist %PREFIX%\\\\Scripts\\\\psi4 exit 1",
    "if not exist %PREFIX%\\\\Scripts\\\\psi4-script.py exit 1",
    "if not exist %PREFIX%\\\\Scripts\\\\psi4.exe exit 1",
    "psi4.exe --version",
    "psi4.exe --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\psi4\\\\psi4-dec.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4\\\\psi4Config.cmake exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\TargetLAPACK\\\\TargetLAPACKConfig.cmake exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\psi4\\\\basis\\\\cc-pvdz.gbs exit 1",
    "objdump.exe -p %SP_DIR%\\\\psi4\\\\core.*.pyd | findstr /i \"dll\"",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "pytest -rws -v --durations=20 --color yes -n auto %SP_DIR%\\\\psi4 -m \"smoke and not d2ints\"",
    "dir %PREFIX%\\\\Library\\\\lib",
    "dir %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4",
    "dir %SP_DIR%\\\\psi4",
    "if not exist %SP_DIR%\\\\psi4\\\\core*.pyd exit 1",
    "if not exist %SP_DIR%\\\\psi4\\\\driver\\\\driver.py exit 1",
    "if exist %PREFIX%\\\\Scripts\\\\psi4 exit 1",
    "if not exist %PREFIX%\\\\Scripts\\\\psi4-script.py exit 1",
    "if not exist %PREFIX%\\\\Scripts\\\\psi4.exe exit 1",
    "psi4.exe --version",
    "psi4.exe --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\psi4\\\\psi4-dec.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4\\\\psi4Config.cmake exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\TargetLAPACK\\\\TargetLAPACKConfig.cmake exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\psi4\\\\basis\\\\cc-pvdz.gbs exit 1",
    "objdump.exe -p %SP_DIR%\\\\psi4\\\\core.*.pyd | findstr /i \"dll\"",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "pytest -rws -v --durations=20 --color yes -n auto %SP_DIR%\\\\psi4 -m \"smoke and not d2ints\"",
    "dir %PREFIX%\\\\Library\\\\lib",
    "dir %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4",
    "dir %SP_DIR%\\\\psi4",
    "if not exist %SP_DIR%\\\\psi4\\\\core*.pyd exit 1",
    "if not exist %SP_DIR%\\\\psi4\\\\driver\\\\driver.py exit 1",
    "if exist %PREFIX%\\\\Scripts\\\\psi4 exit 1",
    "if not exist %PREFIX%\\\\Scripts\\\\psi4-script.py exit 1",
    "if not exist %PREFIX%\\\\Scripts\\\\psi4.exe exit 1",
    "psi4.exe --version",
    "psi4.exe --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\psi4\\\\psi4-dec.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4\\\\psi4Config.cmake exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\TargetLAPACK\\\\TargetLAPACKConfig.cmake exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\psi4\\\\basis\\\\cc-pvdz.gbs exit 1",
    "objdump.exe -p %SP_DIR%\\\\psi4\\\\core.*.pyd | findstr /i \"dll\"",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "pytest -rws -v --durations=20 --color yes -n auto %SP_DIR%\\\\psi4 -m \"smoke and not d2ints\""
   ],
   "imports": [
    "psi4",
    "psi4",
    "psi4",
    "psi4",
    "psi4",
    "psi4",
    "psi4",
    "psi4",
    "psi4"
   ],
   "requires": [
    "pip",
    "pytest",
    "pytest-xdist",
    "pyddx",
    "dftd3-python",
    "dftd4-python",
    "toml",
    "pylibefp",
    "gcp-correction",
    "geometric",
    "pymdi",
    "pip",
    "pytest",
    "pytest-xdist",
    "pyddx",
    "dftd3-python",
    "dftd4-python",
    "toml",
    "pylibefp",
    "gcp-correction",
    "geometric",
    "pymdi",
    "pip",
    "pytest",
    "pytest-xdist",
    "pyddx",
    "dftd3-python",
    "dftd4-python",
    "toml",
    "pylibefp",
    "gcp-correction",
    "geometric",
    "pymdi",
    "pip",
    "pytest",
    "pytest-xdist",
    "pyddx",
    "dftd3-python",
    "dftd4-python",
    "toml",
    "pylibefp",
    "gcp-correction",
    "geometric",
    "pymdi",
    "pip",
    "pytest",
    "pytest-xdist",
    "pyddx",
    "dftd3-python",
    "dftd4-python",
    "toml",
    "pylibefp",
    "gcp-correction",
    "geometric",
    "pymdi",
    "pip",
    "pytest",
    "pytest-xdist",
    "pyddx",
    "dftd3-python",
    "dftd4-python",
    "toml",
    "pylibefp",
    "gcp-correction",
    "geometric",
    "pymdi",
    "pip",
    "pytest",
    "pytest-xdist",
    "m2w64-binutils",
    "toml",
    "pylibefp",
    "geometric",
    "pymdi",
    "pip",
    "pytest",
    "pytest-xdist",
    "m2w64-binutils",
    "toml",
    "pylibefp",
    "geometric",
    "pymdi",
    "pip",
    "pytest",
    "pytest-xdist",
    "m2w64-binutils",
    "toml",
    "pylibefp",
    "geometric",
    "pymdi"
   ]
  }
 },
 "name": "psi4",
 "osx_64_meta_yaml": {
  "about": {
   "description": "Psi4 is an open-source suite of ab initio quantum chemistry programs designed for efficient,\nhigh-accuracy simulations of a variety of molecular properties. We can routinely perform computations\nwith more than 2500 basis functions running serially or on multi-core machines. With computationally\ndemanding portions written in C++, Pybind11 exports many of the C++ classes into Python, and a\nflexible Python driver, Psi4 strives to be friendly to both users and developers.\n",
   "dev_url": "https://github.com/psi4/psi4",
   "doc_source_url": "https://github.com/psi4/psi4/tree/master/doc/sphinxman/source",
   "doc_url": "http://psicode.org/psi4manual/master/index.html",
   "home": "http://psicode.org",
   "license": "LGPL-3.0-only AND BSD-3-Clause AND MIT",
   "license_family": "LGPL",
   "license_file": [
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES",
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES",
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES"
   ],
   "license_url": "https://opensource.org/license/lgpl-3-0/",
   "summary": "Open-Source Quantum Chemistry - an electronic structure package in C++ driven by Python"
  },
  "build": {
   "binary_relocation": true,
   "ignore_run_exports": [
    "libint",
    "libint",
    "libint"
   ],
   "number": "0",
   "run_exports": [
    "psi4",
    "psi4",
    "psi4"
   ],
   "script_env": [
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084",
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084",
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "loriab",
    "jturney",
    "fevangelista",
    "loriab",
    "jturney",
    "fevangelista",
    "loriab",
    "jturney",
    "fevangelista"
   ]
  },
  "package": {
   "name": "psi4",
   "version": "1.8a1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "make",
    "llvm-openmp"
   ],
   "host": [
    "eigen",
    "boost-cpp",
    "mkl-devel",
    "mkl",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh",
    "eigen",
    "boost-cpp",
    "mkl-devel",
    "mkl",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh",
    "eigen",
    "boost-cpp",
    "mkl-devel",
    "mkl",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh"
   ],
   "run": [
    "llvm-openmp",
    "libblas * *mkl",
    "mkl",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine",
    "llvm-openmp",
    "libblas * *mkl",
    "mkl",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine",
    "llvm-openmp",
    "libblas * *mkl",
    "mkl",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine"
   ],
   "run_constrained": [
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2",
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2",
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2"
   ]
  },
  "source": [
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   },
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   },
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "ls -l $PREFIX/lib",
    "ls -l $PREFIX/share/cmake/psi4",
    "ls -l $SP_DIR/psi4",
    "test -f $SP_DIR/psi4/core*.so",
    "test -f $SP_DIR/psi4/driver/driver.py",
    "test -f $PREFIX/bin/psi4",
    "psi4 --version",
    "psi4 --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "test -f $PREFIX/include/psi4/psi4-dec.h",
    "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
    "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
    "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
    "otool -L $SP_DIR/psi4/core*.so",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\"",
    "ls -l $PREFIX/lib",
    "ls -l $PREFIX/share/cmake/psi4",
    "ls -l $SP_DIR/psi4",
    "test -f $SP_DIR/psi4/core*.so",
    "test -f $SP_DIR/psi4/driver/driver.py",
    "test -f $PREFIX/bin/psi4",
    "psi4 --version",
    "psi4 --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "test -f $PREFIX/include/psi4/psi4-dec.h",
    "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
    "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
    "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
    "otool -L $SP_DIR/psi4/core*.so",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\"",
    "ls -l $PREFIX/lib",
    "ls -l $PREFIX/share/cmake/psi4",
    "ls -l $SP_DIR/psi4",
    "test -f $SP_DIR/psi4/core*.so",
    "test -f $SP_DIR/psi4/driver/driver.py",
    "test -f $PREFIX/bin/psi4",
    "psi4 --version",
    "psi4 --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "test -f $PREFIX/include/psi4/psi4-dec.h",
    "test -f $PREFIX/share/cmake/psi4/psi4Config.cmake",
    "test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake",
    "test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs",
    "otool -L $SP_DIR/psi4/core*.so",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\""
   ],
   "imports": [
    "psi4",
    "psi4",
    "psi4"
   ],
   "requires": [
    "pip",
    "pytest",
    "pytest-xdist",
    "pyddx",
    "dftd3-python",
    "dftd4-python",
    "toml",
    "pylibefp",
    "gcp-correction",
    "geometric",
    "pymdi",
    "pip",
    "pytest",
    "pytest-xdist",
    "pyddx",
    "dftd3-python",
    "dftd4-python",
    "toml",
    "pylibefp",
    "gcp-correction",
    "geometric",
    "pymdi",
    "pip",
    "pytest",
    "pytest-xdist",
    "pyddx",
    "dftd3-python",
    "dftd4-python",
    "toml",
    "pylibefp",
    "gcp-correction",
    "geometric",
    "pymdi"
   ]
  }
 },
 "osx_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "llvm-openmp",
    "make"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "dkh",
    "eigen",
    "gau2grid",
    "libint",
    "libxc-c",
    "mkl",
    "mkl-devel",
    "optking",
    "pybind11",
    "pybind11-abi",
    "python",
    "qcelemental",
    "qcengine"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "libblas",
    "libint",
    "llvm-openmp",
    "mkl",
    "msgpack-python",
    "networkx",
    "numpy",
    "optking",
    "python",
    "qcelemental",
    "qcengine",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "dftd3-python",
    "dftd4-python",
    "gcp-correction",
    "geometric",
    "pip",
    "pyddx",
    "pylibefp",
    "pymdi",
    "pytest",
    "pytest-xdist",
    "toml"
   ]
  }
 },
 "outputs_names": {
  "__set__": true,
  "elements": [
   "psi4"
  ]
 },
 "parsing_error": false,
 "platforms": [
  "linux_64",
  "osx_64",
  "win_64"
 ],
 "pr_info": {
  "__lazy_json__": "pr_info/psi4.json"
 },
 "raw_meta_yaml": "{% set name = \"psi4\" %}\n{% set version = \"1.8a1\" %}\n{% set commit = \"a0ad084\" %}\n{% set sha256 = \"e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9\" %}\n\n# versioning: want conda package and `psi4 --version` to match\n# * proper tagged releases compute their versions consistent with recipe w/o interventions.\n#   so comment out the \"echo ... metadata.py\" cmds in build.sh and bld.bat. (\"commit\" var here also disposable.)\n# * to package _any_ commit, set it to \"commit\" jinja, set \"version\" jinja to a fake prerelease tag, and let the \"echo ... metadata.py\" machinery work.\n#   note that the non-c-f recipe didn't need this machinery b/c it used source/git_url and load_setup_py_data.\n\npackage:\n  name: {{ name|lower }}\n  version: {{ version }}\n\nsource:\n  - url: https://github.com/{{ name }}/{{ name }}/archive/{{ commit }}.tar.gz\n    # url: https://github.com/{{ name }}/{{ name }}/archive/v{{ version }}.tar.gz\n    sha256: {{ sha256 }}\n  - url: https://github.com/psi4/iomp5md/archive/31b4ccb.tar.gz               # [win]\n    sha256: d9c6ad3976183f54b676335885d8557d67ca7b25ac4115b91b4cc42281d95f7c  # [win]\n    folder: external_src                                                      # [win]\n\nbuild:\n  number: 0\n  script_env:\n    - PSI4_PRETEND_VERSIONLONG={{ version }}+{{ commit }}\n  binary_relocation: true\n  run_exports:\n    # only relevant for the rare \"psi4 plugin\" case (links to psi4/core.*so), not the usual \"psi4 module\" case (import psi4)\n    - {{ pin_subpackage('psi4', max_pin='x.x') }}\n  ignore_run_exports:\n    - libint\n\n# bkgd for review: the libint story\n# * this recipe is using a libint dev package for reasons at https://github.com/conda-forge/libint-feedstock/issues/15\n# * libint_dev pkg has a run_exports `x`, which is true for the package in general\n# * but since API is not finalized, it's prudent for now to pin req/run to exact, hence the ignore_run_exports above\n\n# bkgd for review: the fortran story\n# * psi4 has no fortran code and no fortran required dependencies (besides blas/lapack)\n# * it does have optional functionality-expanding fortran dependencies like dkh (recipe alongside) that are packaged separately\n# * this recipe omits the fortran compiler since C++ compiler can do the linking and because on windows,\n#   the clang-cl + gfortran combination hits https://gitlab.kitware.com/cmake/cmake/-/issues/17810\n\n# bkgd for review: the general blas story\n# * psi4's performance is heavily dependent on the blas/lapack implementation\n# * we've been packaging on conda with mkl for the past 7y\n# * while the psi4 build system allows any blas impl, we emit \"untested\" warnings for non-MKL, and the last test of openblas 5y ago had threading oversubscriptions\n# * so while we're open to multiple impl in future and have been specifying generic \"libblas\" in deps like dkh, we'd like to support only mkl in psi4 for now\n\n# bkgd for review: the windows blas story\n# * the latest blas+win+mkl package (libblas-3.9.0-16_win64_mkl) depends on mkl=2022.1.0, even though mkl=2022.2 and 2023.0 are available.\n# * so the `{{ mkl }}  # [win]` below pins to 2022.1.0 so that libblas=*=*mkl can work correctly to set the blas implementation.\n# * without the `{{ mkl }}` pin, various attempts would either install mkl + openblas + libblas=*=*openblas or try to fall back to libblas==3.8.0=10_mkl\n# * current conda-forge-pinning is mkl=mkl-devel=2022, so hopefully this recipe is still consistent with the c-f stack.\n\n# bkgd for review: the windows openmp story\n# * the windows mkl package depends on intel-openmp (provides libiomp5md.dll).\n# * llvm-openmp is another contender on windows (provides libomp.dll=libiomp5md.dll and assoc. import libs libomp.lib=libiomp5md.lib).\n# * intel-openmp libiomp5md.dll is twice the size of the llvm-openmp file of the same name, and there's reports of non-interchangeability:\n#   * https://github.com/conda-forge/conda-forge.github.io/issues/1597#issuecomment-1029224521\n#   * https://github.com/conda-forge/intel_repack-feedstock/issues/1#issuecomment-579975070\n# * so we'd like to keep depending on intel-openmp, but since the package only provides the runtime dll,\n#   not the buildtime import lib, we stash a copy of the latter in a repo (see 2nd source/url above)\n#   for compiling psi4. It is used at buildtime and never packaged.\n# * for threading on windows, we're certainly willing for the psi4 recipe to do whatever works well with the c-f stack.\n#   However, at the moment this aspect of the stack seems a little fractured, so the recipe is defaulting to the\n#   mkl + intel-openmp + stashed libiomp5md.lib procedure that has worked compatibly with c-f for the last couple years.\n\nrequirements:\n  build:\n    - {{ compiler('c') }}\n    - {{ compiler('cxx') }}\n    - cmake\n    - make                                   # [unix]\n    - ninja                                  # [win]\n    - llvm-openmp                            # [unix]\n  host:\n    - eigen\n    - boost-cpp\n    - mkl-devel                              # [unix]\n    - mkl-devel {{ mkl }}                    # [win]\n    - mkl                                    # [unix]\n    - mkl {{ mkl }}                          # [win]\n    - pybind11\n    - pybind11-abi\n    - python\n    # qc req'd\n    - gau2grid\n    - libint 2.7.3dev1\n    - libxc-c\n    - optking\n    - qcelemental\n    - qcengine\n    # qc opt'l, build-time\n    - dkh\n  run:\n    - llvm-openmp                            # [unix]\n    - intel-openmp                           # [win]\n    - libblas * *mkl\n    - mkl                                    # [unix]\n    - mkl {{ mkl }}                          # [win]\n    - msgpack-python\n    - networkx\n    - numpy\n    - python\n    - scipy\n    # qc\n    - libint 2.7.3dev1                                 # 2.7.3dev1 provides rt-switchable ordering (src) and derivative integrals (build)\n    - {{ pin_compatible('optking', max_pin='x.x') }}\n    - {{ pin_compatible('qcelemental', max_pin='x.x') }}\n    - {{ pin_compatible('qcengine', max_pin='x.x') }}\n  run_constrained:\n    - pytest >=7.0.1\n    # qc opt'l, run-time\n    - pylibefp ==0.6.2                                 # 0.6.2 provides windows arch\n    - dftd4-python >=3.5.0                             # 3.5.0 provides b97-3c parameters\n    - geometric >=1.0                                  # 1.0 has new API\n    - pymdi >=1.2                                      # 1.2 has breaking API change\n\ntest:\n  imports:\n    - psi4\n  requires:\n    - pip\n    - pytest\n    - pytest-xdist\n    - m2w64-binutils                                                     # [win]   # provides objdump.exe\n    # qc runtime opt'l\n    - pyddx                                                              # [unix]\n    - dftd3-python                                                       # [unix]\n    - dftd4-python                                                       # [unix]\n    - toml                                                                         # needed for qcengine/dftd4-python interface\n    - pylibefp\n    - gcp-correction                                                     # [unix]\n    - geometric\n    - pymdi\n  commands:\n    - ls -l $PREFIX/lib                                                  # [unix]\n    - ls -l $PREFIX/share/cmake/psi4                                     # [unix]\n    - ls -l $SP_DIR/psi4                                                 # [unix]\n    - dir %PREFIX%\\\\Library\\\\lib                                         # [win]\n    - dir %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4                          # [win]\n    - dir %SP_DIR%\\\\psi4                                                 # [win]\n    # Verify module\n    - test -f $SP_DIR/psi4/core*.so                                      # [unix]\n    - test -f $SP_DIR/psi4/driver/driver.py                              # [unix]\n    - if not exist %SP_DIR%\\\\psi4\\\\core*.pyd exit 1                      # [win]\n    - if not exist %SP_DIR%\\\\psi4\\\\driver\\\\driver.py exit 1              # [win]\n    # Verify executable\n    - test -f $PREFIX/bin/psi4                                           # [unix]\n    - psi4 --version                                                     # [unix]\n    - psi4 --module                                                      # [unix]\n    - if exist %PREFIX%\\\\Scripts\\\\psi4 exit 1                            # [win]\n    - if not exist %PREFIX%\\\\Scripts\\\\psi4-script.py exit 1              # [win]   # aka bin/psi4\n    - if not exist %PREFIX%\\\\Scripts\\\\psi4.exe exit 1                    # [win]\n    - psi4.exe --version                                                 # [win]\n    - psi4.exe --module                                                  # [win]\n    - python -c \"import psi4;print(psi4.executable)\"\n    # Verify accessories\n    - test -f $PREFIX/include/psi4/psi4-dec.h                            # [unix]\n    - test -f $PREFIX/share/cmake/psi4/psi4Config.cmake                  # [unix]\n    - test -f $PREFIX/share/cmake/TargetLAPACK/TargetLAPACKConfig.cmake  # [unix]\n    - test -f $PREFIX/share/psi4/basis/cc-pvdz.gbs                       # [unix]\n    - if not exist %PREFIX%\\\\Library\\\\include\\\\psi4\\\\psi4-dec.h exit 1   # [win]\n    - if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4\\\\psi4Config.cmake exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\TargetLAPACK\\\\TargetLAPACKConfig.cmake exit 1  # [win]\n    - if not exist %PREFIX%\\\\Library\\\\share\\\\psi4\\\\basis\\\\cc-pvdz.gbs exit 1  # [win]\n    # Inspect linkage\n    - ldd -v $SP_DIR/psi4/core*.so                                       # [linux]\n    - otool -L $SP_DIR/psi4/core*.so                                     # [osx]\n    - objdump.exe -p %SP_DIR%\\\\psi4\\\\core.*.pyd | findstr /i \"dll\"       # [win]\n    # Actually test\n    - pip check\n    - python -c \"import psi4;assert psi4.__version__ == '{{ version }}', f'{psi4.__version__=} differs from recipe=\\'{{ version }}\\''\"\n    - python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"\n    - MKL_CBWR=AVX pytest -rws -v --durations=20 --color yes -n auto $SP_DIR/psi4 -m \"smoke\"  # [unix]\n    - pytest -rws -v --durations=20 --color yes -n auto %SP_DIR%\\\\psi4 -m \"smoke and not d2ints\"  # [win]\n\nabout:\n  home: http://psicode.org\n  dev_url: https://github.com/psi4/psi4\n  doc_url: http://psicode.org/psi4manual/master/index.html\n  doc_source_url: https://github.com/psi4/psi4/tree/master/doc/sphinxman/source\n  license: LGPL-3.0-only AND BSD-3-Clause AND MIT\n  license_url: https://opensource.org/license/lgpl-3-0/\n  license_file:\n    - COPYING\n    - COPYING.LESSER\n    - THIRD-PARTY-LICENSES\n  license_family: LGPL\n  summary: \"Open-Source Quantum Chemistry - an electronic structure package in C++ driven by Python\"\n  description: |\n    Psi4 is an open-source suite of ab initio quantum chemistry programs designed for efficient,\n    high-accuracy simulations of a variety of molecular properties. We can routinely perform computations\n    with more than 2500 basis functions running serially or on multi-core machines. With computationally\n    demanding portions written in C++, Pybind11 exports many of the C++ classes into Python, and a\n    flexible Python driver, Psi4 strives to be friendly to both users and developers.\n\nextra:\n  recipe-maintainers:\n    - loriab\n    - jturney\n    - fevangelista\n\n\n# Notes\n# -----\n\n# * The following optional runtime deps were in req/run of the psi4::psi4 package but are omitted from conda-forge::psi4\n#   * pytest\n#   * dftd3\n#   * gcp\n#   * dftd4 (installer only)\n",
 "req": {
  "__set__": true,
  "elements": [
   "boost-cpp",
   "c_compiler_stub",
   "cmake",
   "cxx_compiler_stub",
   "dkh",
   "eigen",
   "gau2grid",
   "intel-openmp",
   "libblas",
   "libint",
   "libxc-c",
   "llvm-openmp",
   "make",
   "mkl",
   "mkl-devel",
   "msgpack-python",
   "networkx",
   "ninja",
   "numpy",
   "optking",
   "pybind11",
   "pybind11-abi",
   "python",
   "qcelemental",
   "qcengine",
   "scipy"
  ]
 },
 "requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "llvm-openmp",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "dkh",
    "eigen",
    "gau2grid",
    "libint",
    "libxc-c",
    "mkl",
    "mkl-devel",
    "openmp",
    "optking",
    "pybind11",
    "pybind11-abi",
    "python",
    "qcelemental",
    "qcengine"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "intel-openmp",
    "libblas",
    "libint",
    "llvm-openmp",
    "mkl",
    "msgpack-python",
    "networkx",
    "numpy",
    "openmp",
    "optking",
    "python",
    "qcelemental",
    "qcengine",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "dftd3-python",
    "dftd4-python",
    "gcp-correction",
    "geometric",
    "m2w64-binutils",
    "pip",
    "pyddx",
    "pylibefp",
    "pymdi",
    "pytest",
    "pytest-xdist",
    "toml"
   ]
  }
 },
 "strong_exports": false,
 "total_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "llvm-openmp",
    "make",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "dkh",
    "eigen",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "mkl",
    "mkl 2022.1.0",
    "mkl-devel",
    "mkl-devel 2022.1.0",
    "optking",
    "pybind11",
    "pybind11-abi",
    "python",
    "qcelemental",
    "qcengine"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "intel-openmp",
    "libblas * *mkl",
    "libint 2.7.3dev1",
    "llvm-openmp",
    "mkl",
    "mkl 2022.1.0",
    "msgpack-python",
    "networkx",
    "numpy",
    "optking",
    "python",
    "qcelemental",
    "qcengine",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "dftd3-python",
    "dftd4-python",
    "gcp-correction",
    "geometric",
    "m2w64-binutils",
    "pip",
    "pyddx",
    "pylibefp",
    "pymdi",
    "pytest",
    "pytest-xdist",
    "toml"
   ]
  }
 },
 "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz",
 "version": "1.8a1",
 "version_pr_info": {
  "__lazy_json__": "version_pr_info/psi4.json"
 },
 "win_64_meta_yaml": {
  "about": {
   "description": "Psi4 is an open-source suite of ab initio quantum chemistry programs designed for efficient,\nhigh-accuracy simulations of a variety of molecular properties. We can routinely perform computations\nwith more than 2500 basis functions running serially or on multi-core machines. With computationally\ndemanding portions written in C++, Pybind11 exports many of the C++ classes into Python, and a\nflexible Python driver, Psi4 strives to be friendly to both users and developers.\n",
   "dev_url": "https://github.com/psi4/psi4",
   "doc_source_url": "https://github.com/psi4/psi4/tree/master/doc/sphinxman/source",
   "doc_url": "http://psicode.org/psi4manual/master/index.html",
   "home": "http://psicode.org",
   "license": "LGPL-3.0-only AND BSD-3-Clause AND MIT",
   "license_family": "LGPL",
   "license_file": [
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES",
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES",
    "COPYING",
    "COPYING.LESSER",
    "THIRD-PARTY-LICENSES"
   ],
   "license_url": "https://opensource.org/license/lgpl-3-0/",
   "summary": "Open-Source Quantum Chemistry - an electronic structure package in C++ driven by Python"
  },
  "build": {
   "binary_relocation": true,
   "ignore_run_exports": [
    "libint",
    "libint",
    "libint"
   ],
   "number": "0",
   "run_exports": [
    "psi4",
    "psi4",
    "psi4"
   ],
   "script_env": [
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084",
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084",
    "PSI4_PRETEND_VERSIONLONG=1.8a1+a0ad084"
   ]
  },
  "extra": {
   "recipe-maintainers": [
    "loriab",
    "jturney",
    "fevangelista",
    "loriab",
    "jturney",
    "fevangelista",
    "loriab",
    "jturney",
    "fevangelista"
   ]
  },
  "package": {
   "name": "psi4",
   "version": "1.8a1"
  },
  "requirements": {
   "build": [
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja",
    "c_compiler_stub",
    "cxx_compiler_stub",
    "cmake",
    "ninja"
   ],
   "host": [
    "eigen",
    "boost-cpp",
    "mkl-devel 2022.1.0",
    "mkl 2022.1.0",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh",
    "eigen",
    "boost-cpp",
    "mkl-devel 2022.1.0",
    "mkl 2022.1.0",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh",
    "eigen",
    "boost-cpp",
    "mkl-devel 2022.1.0",
    "mkl 2022.1.0",
    "pybind11",
    "pybind11-abi",
    "python",
    "gau2grid",
    "libint 2.7.3dev1",
    "libxc-c",
    "optking",
    "qcelemental",
    "qcengine",
    "dkh"
   ],
   "run": [
    "intel-openmp",
    "libblas * *mkl",
    "mkl 2022.1.0",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine",
    "intel-openmp",
    "libblas * *mkl",
    "mkl 2022.1.0",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine",
    "intel-openmp",
    "libblas * *mkl",
    "mkl 2022.1.0",
    "msgpack-python",
    "networkx",
    "numpy",
    "python",
    "scipy",
    "libint 2.7.3dev1",
    "optking",
    "qcelemental",
    "qcengine"
   ],
   "run_constrained": [
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2",
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2",
    "pytest >=7.0.1",
    "pylibefp ==0.6.2",
    "dftd4-python >=3.5.0",
    "geometric >=1.0",
    "pymdi >=1.2"
   ]
  },
  "source": [
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   },
   {
    "folder": "external_src",
    "sha256": "d9c6ad3976183f54b676335885d8557d67ca7b25ac4115b91b4cc42281d95f7c",
    "url": "https://github.com/psi4/iomp5md/archive/31b4ccb.tar.gz"
   },
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   },
   {
    "folder": "external_src",
    "sha256": "d9c6ad3976183f54b676335885d8557d67ca7b25ac4115b91b4cc42281d95f7c",
    "url": "https://github.com/psi4/iomp5md/archive/31b4ccb.tar.gz"
   },
   {
    "sha256": "e8c7b6e0e25abfa992309b95f3ad7f3205340c2f248c44c1597fbe457e5815d9",
    "url": "https://github.com/psi4/psi4/archive/a0ad084.tar.gz"
   },
   {
    "folder": "external_src",
    "sha256": "d9c6ad3976183f54b676335885d8557d67ca7b25ac4115b91b4cc42281d95f7c",
    "url": "https://github.com/psi4/iomp5md/archive/31b4ccb.tar.gz"
   }
  ],
  "test": {
   "commands": [
    "dir %PREFIX%\\\\Library\\\\lib",
    "dir %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4",
    "dir %SP_DIR%\\\\psi4",
    "if not exist %SP_DIR%\\\\psi4\\\\core*.pyd exit 1",
    "if not exist %SP_DIR%\\\\psi4\\\\driver\\\\driver.py exit 1",
    "if exist %PREFIX%\\\\Scripts\\\\psi4 exit 1",
    "if not exist %PREFIX%\\\\Scripts\\\\psi4-script.py exit 1",
    "if not exist %PREFIX%\\\\Scripts\\\\psi4.exe exit 1",
    "psi4.exe --version",
    "psi4.exe --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\psi4\\\\psi4-dec.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4\\\\psi4Config.cmake exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\TargetLAPACK\\\\TargetLAPACKConfig.cmake exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\psi4\\\\basis\\\\cc-pvdz.gbs exit 1",
    "objdump.exe -p %SP_DIR%\\\\psi4\\\\core.*.pyd | findstr /i \"dll\"",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "pytest -rws -v --durations=20 --color yes -n auto %SP_DIR%\\\\psi4 -m \"smoke and not d2ints\"",
    "dir %PREFIX%\\\\Library\\\\lib",
    "dir %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4",
    "dir %SP_DIR%\\\\psi4",
    "if not exist %SP_DIR%\\\\psi4\\\\core*.pyd exit 1",
    "if not exist %SP_DIR%\\\\psi4\\\\driver\\\\driver.py exit 1",
    "if exist %PREFIX%\\\\Scripts\\\\psi4 exit 1",
    "if not exist %PREFIX%\\\\Scripts\\\\psi4-script.py exit 1",
    "if not exist %PREFIX%\\\\Scripts\\\\psi4.exe exit 1",
    "psi4.exe --version",
    "psi4.exe --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\psi4\\\\psi4-dec.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4\\\\psi4Config.cmake exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\TargetLAPACK\\\\TargetLAPACKConfig.cmake exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\psi4\\\\basis\\\\cc-pvdz.gbs exit 1",
    "objdump.exe -p %SP_DIR%\\\\psi4\\\\core.*.pyd | findstr /i \"dll\"",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "pytest -rws -v --durations=20 --color yes -n auto %SP_DIR%\\\\psi4 -m \"smoke and not d2ints\"",
    "dir %PREFIX%\\\\Library\\\\lib",
    "dir %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4",
    "dir %SP_DIR%\\\\psi4",
    "if not exist %SP_DIR%\\\\psi4\\\\core*.pyd exit 1",
    "if not exist %SP_DIR%\\\\psi4\\\\driver\\\\driver.py exit 1",
    "if exist %PREFIX%\\\\Scripts\\\\psi4 exit 1",
    "if not exist %PREFIX%\\\\Scripts\\\\psi4-script.py exit 1",
    "if not exist %PREFIX%\\\\Scripts\\\\psi4.exe exit 1",
    "psi4.exe --version",
    "psi4.exe --module",
    "python -c \"import psi4;print(psi4.executable)\"",
    "if not exist %PREFIX%\\\\Library\\\\include\\\\psi4\\\\psi4-dec.h exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\psi4\\\\psi4Config.cmake exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\cmake\\\\TargetLAPACK\\\\TargetLAPACKConfig.cmake exit 1",
    "if not exist %PREFIX%\\\\Library\\\\share\\\\psi4\\\\basis\\\\cc-pvdz.gbs exit 1",
    "objdump.exe -p %SP_DIR%\\\\psi4\\\\core.*.pyd | findstr /i \"dll\"",
    "pip check",
    "python -c \"import psi4;assert psi4.__version__ == '1.8a1', f'{psi4.__version__=} differs from recipe=\\'1.8a1\\''\"",
    "python -c \"from psi4 import core; core.set_num_threads(42); assert core.get_num_threads() == 42\"",
    "pytest -rws -v --durations=20 --color yes -n auto %SP_DIR%\\\\psi4 -m \"smoke and not d2ints\""
   ],
   "imports": [
    "psi4",
    "psi4",
    "psi4"
   ],
   "requires": [
    "pip",
    "pytest",
    "pytest-xdist",
    "m2w64-binutils",
    "toml",
    "pylibefp",
    "geometric",
    "pymdi",
    "pip",
    "pytest",
    "pytest-xdist",
    "m2w64-binutils",
    "toml",
    "pylibefp",
    "geometric",
    "pymdi",
    "pip",
    "pytest",
    "pytest-xdist",
    "m2w64-binutils",
    "toml",
    "pylibefp",
    "geometric",
    "pymdi"
   ]
  }
 },
 "win_64_requirements": {
  "build": {
   "__set__": true,
   "elements": [
    "c_compiler_stub",
    "cmake",
    "cxx_compiler_stub",
    "ninja"
   ]
  },
  "host": {
   "__set__": true,
   "elements": [
    "boost-cpp",
    "dkh",
    "eigen",
    "gau2grid",
    "libint",
    "libxc-c",
    "mkl",
    "mkl-devel",
    "optking",
    "pybind11",
    "pybind11-abi",
    "python",
    "qcelemental",
    "qcengine"
   ]
  },
  "run": {
   "__set__": true,
   "elements": [
    "intel-openmp",
    "libblas",
    "libint",
    "mkl",
    "msgpack-python",
    "networkx",
    "numpy",
    "optking",
    "python",
    "qcelemental",
    "qcengine",
    "scipy"
   ]
  },
  "test": {
   "__set__": true,
   "elements": [
    "geometric",
    "m2w64-binutils",
    "pip",
    "pylibefp",
    "pymdi",
    "pytest",
    "pytest-xdist",
    "toml"
   ]
  }
 }
}